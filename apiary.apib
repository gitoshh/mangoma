FORMAT: 1A
HOST: https://mangoma.herokuapp.com

# Mangoma

Mangoma is a music app API. This API provides artistes a platform to upload music and users a platform to download and listen music. Their exists premium account holders that can reccomend music and share playlists.

## users [/users]

### create new users [GET]

This action will be used to create new users. It takes a JSON object containing name, email and password. The password should have a minimum of 6 characters and at least one letter, a digit and a special character.
+ Request (application/json)

        {
            "name": "test user",
            "email": "test.user@gmail.com",
            "password": "A123123@"
        }

+ Response 200 (application/json)

        {
            "name": "test user",
            "email": "test.user@gmail.com",
            "password": "@123123A"
        }
        

## login [/auth/login]

### sign in users [POST]

You may sign up users using this action. It takes a JSON
object containing an email and password.

+ Request (application/json)

        {
            "email": "test.user@gmail.com",
            "password": "@123123A"
        }

+ Response 200 (application/json)

        {
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRvc2hoXC9tYW5nb21hIiwic3ViIjoxLCJpYXQiOjE1NTgzNTk2NDMsImV4cCI6MTU1ODM2MzI0M30.nqefT1buWV2T8ALNDyrzMNQUBhUWMiMhulpW7xo6xSg"
        }
    

## logout [/auth/logout]
        
### sign out users  [POST]

You may sign out users using this action. It takes a header `token` string.

+ Request (application/json)

    + Headers
    
            token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRvc2hoXC9tYW5nb21hIiwic3ViIjoxLCJpYXQiOjE1NTgzNTk2NDMsImV4cCI6MTU1ODM2MzI0M30.nqefT1buWV2T8ALNDyrzMNQUBhUWMiMhulpW7xo6xSg"
            
        
+ Response 200 (application/json)

        {
            "message": "Success",
            "data": "Logged out successfully.",
        }
        
    
## Entrust role [/admin/role]

### Add a new role  [POST]

You may add user roles using this action. It takes a header `token` string, a JSON object containing the name, optional display name and optional description for the role.

+ Request (application/json)

    + Headers
    
            token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRvc2hoXC9tYW5nb21hIiwic3ViIjoxLCJpYXQiOjE1NTgzNTk2NDMsImV4cCI6MTU1ODM2MzI0M30.nqefT1buWV2T8ALNDyrzMNQUBhUWMiMhulpW7xo6xSg"
            
     
    + Body
            
            {
                "name": "Test",
                "display_name": "test",
                "description": "Just another description"
            }

+ Response 200 (application/json)

        {
            "message": "success",
            "data": {
            "name": "Test",
            "display_name": "test",
            "description": "Just another description",
            "updated_at": "2019-05-22 12:47:05",
            "created_at": "2019-05-22 12:47:05",
            "id": 5
        }
        
        
## Entrust permission [/admin/permission]

### Add a new permission  [POST]

You may add user permissions using this action. It takes a header `token` string, a JSON object containing the name, optional display name and optional description for the role.

+ Request (application/json)

    + Headers
    
            token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRvc2hoXC9tYW5nb21hIiwic3ViIjoxLCJpYXQiOjE1NTgzNTk2NDMsImV4cCI6MTU1ODM2MzI0M30.nqefT1buWV2T8ALNDyrzMNQUBhUWMiMhulpW7xo6xSg"
            
     
    + Body
            
            {
                "name": "Add-users",
                "display_name": "add users",
                "description": "Just another description"
            }

+ Response 200 (application/json)

        {
            "message": "success",
            "data": {
            "name": "Add-users",
            "display_name": "add users",
            "description": "Just another description",
            "updated_at": "2019-05-22 12:47:05",
            "created_at": "2019-05-22 12:47:05",
            "id": 5
        }
        
        
## Entrust assign role [/admin/attach/role]

### Asign a user to a role  [POST]

You may assign user roles using this action. It takes a header `token` string, a JSON object containing the user id and the role id.

+ Request (application/json)

    + Headers
    
            token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRvc2hoXC9tYW5nb21hIiwic3ViIjoxLCJpYXQiOjE1NTgzNTk2NDMsImV4cCI6MTU1ODM2MzI0M30.nqefT1buWV2T8ALNDyrzMNQUBhUWMiMhulpW7xo6xSg"
            
     
    + Body
            
            {
                "userId": "1",
                "roleId": "3",
            }

+ Response 200 (application/json)

        {
            "message": "success",
            "data": "Roles added successfully"
        }
        
    
## Entrust assign permission [/admin/attach/permission]

### Asign permissions to a role  [POST]

You may assign a role pemissions using this action. It takes a header `token` string, a JSON object containing the role id and an array of ids.

+ Request (application/json)

    + Headers
    
            token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRvc2hoXC9tYW5nb21hIiwic3ViIjoxLCJpYXQiOjE1NTgzNTk2NDMsImV4cCI6MTU1ODM2MzI0M30.nqefT1buWV2T8ALNDyrzMNQUBhUWMiMhulpW7xo6xSg"
            
     
    + Body
            
            {
                "roleId": "1",
                "permissions": [2]
            }

+ Response 200 (application/json)

        {
            "message": "success",
            "data": "Permissions added successfully"
        }
        
        
## Albums [/album]

### create a new album  [POST]

You may create new albums using this action. It takes a header `token` string, a JSON object containing the name of the album, artistes names and the album's release date.

+ Request (application/json)

    + Headers

            token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRvc2hoXC9tYW5nb21hIiwic3ViIjoxLCJpYXQiOjE1NTgzNTk2NDMsImV4cCI6MTU1ODM2MzI0M30.nqefT1buWV2T8ALNDyrzMNQUBhUWMiMhulpW7xo6xSg"


    + Body

            {
            	"title": "A new album",
            	"artistes": "jhene, sean",
            	"releaseDate": "12/01/2017"
            }

+ Response 200 (application/json)

            {
                "message": "success",
                "data": {
                    "title": "A new album",
                    "releaseDate": "2017-12-01T00:00:00.000000Z",
                    "artistes": "jhene, sean",
                    "updated_at": "2019-05-22 13:51:32",
                    "created_at": "2019-05-22 13:51:32",
                    "id": 3
                }
            }


## Albums [/album/{id}]

### create a new album  [DELETE]

You may Delete existing albums using this action. It takes a header `token` string.

+ Request (application/json)

    + Headers

            token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRvc2hoXC9tYW5nb21hIiwic3ViIjoxLCJpYXQiOjE1NTgzNTk2NDMsImV4cCI6MTU1ODM2MzI0M30.nqefT1buWV2T8ALNDyrzMNQUBhUWMiMhulpW7xo6xSg"

+ Response 200 (application/json)

            {
              "message": "success",
              "data": "Album deleted successfully."
            }



        

        
        